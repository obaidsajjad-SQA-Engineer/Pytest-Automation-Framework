name: Regression_suite

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '45 14 * * *'

permissions:
  contents: read
  actions: read
  packages: write
  workflows: write  # If needed, enable this for workflows

jobs:
  run-tests:
    runs-on: ubuntu-latest  # Using the latest Ubuntu runner

    steps:
      - name: Enable debug logging
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures the full history is available (useful for some cases)
        # Debug: Log the commit hash of the current branch
        run: echo "Checked out code at commit: $GITHUB_SHA"

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12.4'
        # Debug: Log the Python version being set up
        run: echo "Python version set to: 3.12.4"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-
        # Debug: Log cache status
        run: echo "Cache status checked for Python dependencies"

      - name: Install dependencies
        run: |
          echo "Upgrading pip"
          python -m pip install --upgrade pip
          echo "Installing dependencies from requirements.txt"
          pip install -r requirements.txt
        # Debug: Log pip version and installed packages
        run: |
          echo "Pip version: $(pip --version)"
          echo "Installed packages:"
          pip list

      - name: Run tests
        run: |
          echo "Running tests with pytest"
          pytest --version
          pytest -s --html=report.html --self-contained-html
          echo "Test run completed with exit code $?"
        continue-on-error: true  # Continue even if tests fail
        # Debug: Log pytest status

      - name: Upload report
        uses: actions/upload-artifact@v4  # Use the latest v4 version
        with:
          name: pytest-report
          path: report.html
        # Debug: Log the report upload status
        run: echo "Report uploaded to GitHub Actions"
